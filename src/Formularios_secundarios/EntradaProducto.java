/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Formularios_secundarios;

import conexion.conexion;
import java.awt.event.KeyEvent;
import java.sql.CallableStatement;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.DecimalFormat;
import java.util.Calendar;
import javax.swing.JOptionPane;

/**
 *
 * @author GynRaider
 */
public class EntradaProducto extends javax.swing.JInternalFrame {

    /**
     * Creates new form reporteProducto
     */
    public EntradaProducto() {
        initComponents();
        jComboBox1.setVisible(false);
        jButton2.setMnemonic(KeyEvent.VK_X);
    }

    public void limpiar() {

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        codigoProveedor = new javax.swing.JTextField();
        codigoProducto = new javax.swing.JTextField();
        numeroFactura = new javax.swing.JTextField();
        precioProducto = new javax.swing.JTextField();
        fechaEntrada = new com.toedter.calendar.JDateChooser();
        cantidadProducto = new javax.swing.JSpinner();
        estadoEntrada = new javax.swing.JComboBox();
        jLabel9 = new javax.swing.JLabel();
        precioTotal = new javax.swing.JTextField();
        jComboBox1 = new javax.swing.JComboBox();
        jLabel10 = new javax.swing.JLabel();

        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton1.setText("Ingresar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(42, 34, -1, -1));

        jButton2.setText("Atras");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(243, 34, -1, -1));

        jButton3.setText("Limpiar");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(149, 34, -1, -1));

        jLabel11.setIcon(new javax.swing.ImageIcon("C:\\Users\\Mchael\\Documents\\NetBeansProjects\\Libreria_GyG\\src\\fondo\\VL.jpg")); // NOI18N
        jPanel1.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 340, 80));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(77, 260, 340, 80));

        jLabel1.setText("Código de Entrada");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(22, 14, -1, -1));

        jLabel2.setText("Codigo de Proveedor");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 52, -1, -1));

        jLabel3.setText("Código del producto");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(271, 52, -1, -1));

        jLabel4.setText("Precio Unitario");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(298, 128, -1, -1));

        jLabel5.setText("Fecha de Entrada");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(26, 93, -1, -1));

        jLabel6.setText("Número de Factura");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(275, 90, -1, -1));

        jLabel7.setText("Cantidad");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(68, 128, -1, -1));

        jLabel8.setText("Estado");
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(78, 225, -1, -1));

        jTextField2.setEditable(false);
        jTextField2.setText("Autogenerado");
        getContentPane().add(jTextField2, new org.netbeans.lib.awtextra.AbsoluteConstraints(121, 11, 92, -1));
        getContentPane().add(codigoProveedor, new org.netbeans.lib.awtextra.AbsoluteConstraints(121, 49, 92, -1));
        getContentPane().add(codigoProducto, new org.netbeans.lib.awtextra.AbsoluteConstraints(377, 49, 92, -1));

        numeroFactura.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                numeroFacturaKeyTyped(evt);
            }
        });
        getContentPane().add(numeroFactura, new org.netbeans.lib.awtextra.AbsoluteConstraints(377, 87, 92, -1));

        precioProducto.setText("0");
        precioProducto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                precioProductoKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                precioProductoKeyTyped(evt);
            }
        });
        getContentPane().add(precioProducto, new org.netbeans.lib.awtextra.AbsoluteConstraints(377, 125, 92, -1));
        getContentPane().add(fechaEntrada, new org.netbeans.lib.awtextra.AbsoluteConstraints(121, 87, 121, -1));

        cantidadProducto.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(0), Integer.valueOf(0), null, Integer.valueOf(1)));
        cantidadProducto.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                cantidadProductoStateChanged(evt);
            }
        });
        cantidadProducto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                cantidadProductoKeyReleased(evt);
            }
        });
        getContentPane().add(cantidadProducto, new org.netbeans.lib.awtextra.AbsoluteConstraints(121, 125, 92, -1));

        estadoEntrada.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Aceptado", "Rechazado", "En espera" }));
        estadoEntrada.setSelectedIndex(-1);
        estadoEntrada.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                estadoEntradaActionPerformed(evt);
            }
        });
        getContentPane().add(estadoEntrada, new org.netbeans.lib.awtextra.AbsoluteConstraints(121, 222, 121, -1));

        jLabel9.setText("Precio total a pagar");
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(273, 166, -1, -1));

        precioTotal.setEditable(false);
        getContentPane().add(precioTotal, new org.netbeans.lib.awtextra.AbsoluteConstraints(377, 163, 92, -1));

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Por devolver", "Devuelto" }));
        jComboBox1.setSelectedIndex(-1);
        getContentPane().add(jComboBox1, new org.netbeans.lib.awtextra.AbsoluteConstraints(274, 222, 136, -1));

        jLabel10.setIcon(new javax.swing.ImageIcon("C:\\Users\\Mchael\\Documents\\NetBeansProjects\\Libreria_GyG\\src\\fondo\\Captura.PNG")); // NOI18N
        getContentPane().add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 500, 360));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        this.dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        String codProveedor = codigoProveedor.getText(),
                codProducto = codigoProducto.getText(),
                codEntrada = "",
                fecha,
                estado;
        Double precUnitario,
                precTotal;
        int numFactura, cantidad, dia, mes, año;

        Connection con;
        con = conexion.conectar();

        if (codProveedor.equals("") || codProducto.equals("") || fechaEntrada.getDate() == null || numeroFactura.getText().equals("") || precioProducto.getText().equals("") || estadoEntrada.getSelectedIndex() == -1 || (Integer) cantidadProducto.getValue() < 1) {
            JOptionPane.showMessageDialog(null, "Complete todos los campos");
        } else {
            estado = estadoEntrada.getSelectedItem().toString();
            precUnitario = Double.parseDouble(precioProducto.getText());
            numFactura = Integer.parseInt(numeroFactura.getText());
            cantidad = (Integer) cantidadProducto.getValue();
            precTotal = precUnitario * cantidad;

            precioTotal.setText(precTotal.toString());

            dia = fechaEntrada.getCalendar().get(Calendar.DAY_OF_MONTH);
            mes = fechaEntrada.getCalendar().get(Calendar.MONTH);
            año = fechaEntrada.getCalendar().get(Calendar.YEAR);
            fecha = año + "-" + mes + "-" + dia;

            try {
                CallableStatement cst = con.prepareCall("Call insertar_entrada_productos (?,?,?,?,?,?,?)");
                cst.setString(1, codProveedor);
                cst.setString(2, codProducto);
                cst.setDouble(3, precUnitario);
                cst.setString(4, fecha);
                cst.setInt(5, numFactura);
                cst.setInt(6, cantidad);
                cst.setString(7, estado);
                cst.execute();

                cst.close();
                JOptionPane.showMessageDialog(null, "Entrada añadido correctamente");

                if (estadoEntrada.getSelectedIndex() == 0) {
                    int stock, nuevoStock;

                    Statement st = con.createStatement();
                    ResultSet rs = st.executeQuery("select * from almacen where codProducto = '" + codProducto + "'");
                    rs.last();

                    stock = rs.getInt("stock");

                    nuevoStock = stock + cantidad;

                    try {
                        PreparedStatement pst = con.prepareStatement("UPDATE almacen SET stock  = " + nuevoStock + " WHERE codProducto = '" + codProducto + "'");

                        if (pst.executeUpdate() > 0) {
                            JOptionPane.showMessageDialog(null, "El nuevo stock del producto ha sido actualizado", "Operación Exitosa",
                                    JOptionPane.INFORMATION_MESSAGE);
                        } else {
                            JOptionPane.showMessageDialog(null, "No se ha podido realizar la actualización de los datos\n"
                                    + "Inténtelo nuevamente.", "Error en la operación",
                                    JOptionPane.ERROR_MESSAGE);
                        }

                        pst.close();
                    } catch (SQLException ex) {
                        JOptionPane.showMessageDialog(null, "Error actualizando la tabla almacen " + ex);
                    }
                }

                if (estadoEntrada.getSelectedIndex() == 1) {
                    try {
                        Statement st = con.createStatement();
                        ResultSet rs = st.executeQuery("select * from entrada_de_productos where factura = '" + numFactura + "'");
                        rs.last();

                        codEntrada = rs.getString("codEntrada");

                        CallableStatement cst1 = con.prepareCall("Call insertar_devolucionproductos(?,?,?)");
                        cst1.setString(1, codEntrada);
                        cst1.setString(2, codigoProveedor.getText());
                        cst1.setString(3, jComboBox1.getSelectedItem().toString());
                        cst1.execute();
                        st.close();
                        rs.close();
                    } catch (Exception e) {
                        JOptionPane.showMessageDialog(null, "Error ingresando a la tabla devoluciones " + e);
                    }
                }

                if (estadoEntrada.getSelectedIndex() == 2) {
                    JOptionPane.showMessageDialog(null, "La entrada permanecerá en espera y no se actualizará el stock disponible");
                }
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, "Error ingresando a la tabla entrada_de_productos " + ex);
            }

        }

    }//GEN-LAST:event_jButton1ActionPerformed

    private void estadoEntradaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_estadoEntradaActionPerformed
        if (estadoEntrada.getSelectedIndex() == 1) {
            jComboBox1.setVisible(true);
        } else {
            jComboBox1.setVisible(false);
        }
    }//GEN-LAST:event_estadoEntradaActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton3ActionPerformed

    private void numeroFacturaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_numeroFacturaKeyTyped
        if (!Character.isDigit(evt.getKeyChar())) {
            evt.consume();
        }
    }//GEN-LAST:event_numeroFacturaKeyTyped

    private void precioProductoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_precioProductoKeyTyped

        if (!Character.isDigit(evt.getKeyChar()) && evt.getKeyChar() != '.') {
            evt.consume();
        }

        if (evt.getKeyChar() == '.' && precioProducto.getText().contains(".")) {
            evt.consume();
        }

    }//GEN-LAST:event_precioProductoKeyTyped

    private void precioProductoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_precioProductoKeyReleased
        Double prec, tot;
        int cant;

        try {
            if (!precioProducto.getText().equals("")) {
                prec = Double.parseDouble(precioProducto.getText());
                cant = (Integer) cantidadProducto.getValue();

                tot = prec * cant;

                precioTotal.setText(Double.toString(tot));
            }
        } catch (NumberFormatException ex) {
            JOptionPane.showMessageDialog(null, "Imposible calcular datos de más de 10 dígitos");
        }

    }//GEN-LAST:event_precioProductoKeyReleased

    private void cantidadProductoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cantidadProductoKeyReleased
        Double prec, tot;
        int cant;

        try {
            if (!precioProducto.getText().equals("")) {
                prec = Double.parseDouble(precioProducto.getText());
                cant = (Integer) cantidadProducto.getValue();

                tot = prec * cant;

                precioTotal.setText(Double.toString(tot));
            }
        } catch (NumberFormatException ex) {
            JOptionPane.showMessageDialog(null, "Imposible calcular datos de más de 10 dígitos");
        }
    }//GEN-LAST:event_cantidadProductoKeyReleased

    private void cantidadProductoStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_cantidadProductoStateChanged
        Double prec, tot;
        int cant;

        try {
            if (!precioProducto.getText().equals("")) {
                prec = Double.parseDouble(precioProducto.getText());
                cant = (Integer) cantidadProducto.getValue();

                tot = prec * cant;

                precioTotal.setText(Double.toString(tot));
            }
        } catch (NumberFormatException ex) {
            JOptionPane.showMessageDialog(null, "Imposible calcular datos de más de 10 dígitos");
        }
    }//GEN-LAST:event_cantidadProductoStateChanged


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JSpinner cantidadProducto;
    private javax.swing.JTextField codigoProducto;
    private javax.swing.JTextField codigoProveedor;
    private javax.swing.JComboBox estadoEntrada;
    private com.toedter.calendar.JDateChooser fechaEntrada;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField numeroFactura;
    private javax.swing.JTextField precioProducto;
    private javax.swing.JTextField precioTotal;
    // End of variables declaration//GEN-END:variables
}

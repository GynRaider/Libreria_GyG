/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Formularios_secundarios;

import Atxy2k.CustomTextField.RestrictedTextField;
import conexion.conexion;
import java.awt.Dimension;
import java.sql.CallableStatement;
import java.sql.Connection;
import java.sql.Date;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Calendar;
import java.util.GregorianCalendar;
import java.util.Random;
import javax.swing.JComponent;
import javax.swing.JOptionPane;

/**
 *
 * @author GynRaider
 */
public class modificarEmpleado extends javax.swing.JInternalFrame {
private JComponent Barra = ((javax.swing.plaf.basic.BasicInternalFrameUI) getUI()).getNorthPane();
    private Dimension dimBarra = null; 
    /**
     * Creates new form nuevoempleadoventa
     */
        Connection con;
        
    
    String 
            codEmpleado,
            nomEmpleado,
            apeEmpleado,
            sexEmpleado,
            dirEmpleado,
            corEmpleado,
            codPersona,
            keepUser;
    int
            docEmpleado,
            celEmpleado,
            accSistema;
//    public String usuario, contrasena;
    public String cadena;
    
    public String getCadenaAlfanumAleatoria(int longitud) {
        String cadenaAleatoria = "";
        long milis = new java.util.GregorianCalendar().getTimeInMillis();
        Random r = new Random(milis);
        int i = 0;
        while (i < longitud) {
            char c = (char) r.nextInt(255);
            if ((c >= '0' && c <= '9') || (c >= 'A' && c <= 'Z')) {
                cadenaAleatoria += c;
                i++;
            }
        }
        return cadenaAleatoria;
    }
    
    public void limpiar(){
        jCheckBox1.setSelected(false);
        documentoEmpleado.setText("");
        nombreEmpleado.setText("");
        apellidoEmpleado.setText("");
        direccionEmpleado.setText("");
        correoEmpleado.setText("");
        celularEmpleado.setText("");
        tipoEmpleado.setSelectedIndex(-1);
        nacimientoEmpleado.setDate(null);
        inicioLaboral.setDate(null);
        jSpinner1.setValue(0);
        jCheckBox2.setSelected(false);
        inicioLaboral.setEnabled(true);
        jLabel18.setVisible(false);
        jSpinner1.setVisible(false);
        jTabbedPane1.setSelectedIndex(0);
        jTabbedPane1.setEnabled(false);
    }
        
    public modificarEmpleado() {
        initComponents();
        
        documentoEmpleado.setEditable(false);
        nombreEmpleado.setEditable(false);
        apellidoEmpleado.setEditable(false);
        sexoEmpleado.setEnabled(false);
        nacimientoEmpleado.setEnabled(false);
        direccionEmpleado.setEditable(false);
        correoEmpleado.setEditable(false);
        celularEmpleado.setEditable(false);
        tipoEmpleado.setEnabled(false);
        jSpinner1.setEnabled(false);
        inicioLaboral.setEnabled(false);
        jCheckBox1.setEnabled(false);
        jCheckBox2.setEnabled(false);
        user.setEditable(false);
        pass.setEditable(false);
        
        jLabel18.setVisible(false);
        jSpinner1.setVisible(false);
            
        ocultarBarraTitulo();
        
//         RestrictedTextField nc = new RestrictedTextField(nombreEmpleado); 
//           nc.setLimit(20);
//           
//           RestrictedTextField ac = new RestrictedTextField(apellidoEmpleado); 
//           ac.setLimit(20);
//           
//           RestrictedTextField rc = new RestrictedTextField(celularEmpleado); 
//           rc.setLimit(9);
//           rc.setOnlyNums(true);
//           RestrictedTextField cc = new RestrictedTextField(direccionEmpleado); 
//           cc.setLimit(50);
//           
//            RestrictedTextField rt = new RestrictedTextField(correoEmpleado); 
//           rt.setLimit(50);
//           
//           RestrictedTextField dc = new RestrictedTextField(documentoEmpleado); 
//           dc.setLimit(8);
//           dc.setOnlyNums(true);
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jButton3 = new javax.swing.JButton();
        JBT_Limpiar = new javax.swing.JButton();
        btnGuardad = new javax.swing.JButton();
        modificarEmpleado = new javax.swing.JCheckBox();
        jLabel22 = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        codigoEmpleado = new javax.swing.JTextField();
        nombreEmpleado = new javax.swing.JTextField();
        apellidoEmpleado = new javax.swing.JTextField();
        sexoEmpleado = new javax.swing.JComboBox();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        direccionEmpleado = new javax.swing.JTextField();
        correoEmpleado = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        tipoEmpleado = new javax.swing.JComboBox();
        jCheckBox1 = new javax.swing.JCheckBox();
        nacimientoEmpleado = new com.toedter.calendar.JDateChooser();
        jLabel10 = new javax.swing.JLabel();
        celularEmpleado = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        jSpinner1 = new javax.swing.JSpinner();
        inicioLaboral = new com.toedter.calendar.JDateChooser();
        jLabel19 = new javax.swing.JLabel();
        jCheckBox2 = new javax.swing.JCheckBox();
        jButton1 = new javax.swing.JButton();
        documentoEmpleado = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        user = new javax.swing.JTextField();
        pass = new javax.swing.JTextField();
        fechaRegistro = new com.toedter.calendar.JDateChooser();
        jLabel12 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jCheckBox3 = new javax.swing.JCheckBox();
        jLabel23 = new javax.swing.JLabel();

        jPanel1.setBackground(new java.awt.Color(255, 255, 204));

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel7.setText("DATOS DEL EMPLEADO");

        jPanel3.setBackground(new java.awt.Color(153, 153, 153));
        jPanel3.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton3.setBackground(new java.awt.Color(153, 153, 153));
        jButton3.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jButton3.setForeground(new java.awt.Color(255, 255, 255));
        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Recursos/Logout_Icon_32.png"))); // NOI18N
        jButton3.setText("Cerrar");
        jButton3.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton3.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jButton3.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel3.add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(353, 14, -1, -1));

        JBT_Limpiar.setBackground(new java.awt.Color(153, 153, 153));
        JBT_Limpiar.setFont(new java.awt.Font("Segoe UI", 1, 10)); // NOI18N
        JBT_Limpiar.setForeground(new java.awt.Color(255, 255, 255));
        JBT_Limpiar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Recursos/Paint tools.png"))); // NOI18N
        JBT_Limpiar.setText("LIMPIAR");
        JBT_Limpiar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        JBT_Limpiar.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        JBT_Limpiar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        JBT_Limpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JBT_LimpiarActionPerformed(evt);
            }
        });
        jPanel3.add(JBT_Limpiar, new org.netbeans.lib.awtextra.AbsoluteConstraints(238, 14, -1, 76));

        btnGuardad.setBackground(new java.awt.Color(153, 153, 153));
        btnGuardad.setFont(new java.awt.Font("Segoe UI", 1, 10)); // NOI18N
        btnGuardad.setForeground(new java.awt.Color(255, 255, 255));
        btnGuardad.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Recursos/Floppy disk.png"))); // NOI18N
        btnGuardad.setText("GUARDAR");
        btnGuardad.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnGuardad.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        btnGuardad.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnGuardad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardadActionPerformed(evt);
            }
        });
        jPanel3.add(btnGuardad, new org.netbeans.lib.awtextra.AbsoluteConstraints(119, 14, -1, -1));

        modificarEmpleado.setText("Modificar");
        modificarEmpleado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modificarEmpleadoActionPerformed(evt);
            }
        });
        jPanel3.add(modificarEmpleado, new org.netbeans.lib.awtextra.AbsoluteConstraints(9, 36, -1, -1));

        jLabel22.setIcon(new javax.swing.ImageIcon("C:\\Users\\Mchael\\Documents\\NetBeansProjects\\Libreria_GyG\\src\\fondo\\VL.jpg")); // NOI18N
        jPanel3.add(jLabel22, new org.netbeans.lib.awtextra.AbsoluteConstraints(4, 0, 430, 100));

        jTabbedPane1.setEnabled(false);
        jTabbedPane1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTabbedPane1MouseClicked(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(153, 153, 153));
        jPanel2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel2.setForeground(new java.awt.Color(102, 102, 102));
        jPanel2.setToolTipText("");
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Código:");
        jPanel2.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 60, -1, -1));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Nombres:");
        jPanel2.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 100, -1, -1));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Apellidos:");
        jPanel2.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 140, -1, -1));

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Sexo :");
        jPanel2.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 180, -1, -1));

        codigoEmpleado.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel2.add(codigoEmpleado, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 60, 115, -1));

        nombreEmpleado.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel2.add(nombreEmpleado, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 100, 360, -1));

        apellidoEmpleado.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel2.add(apellidoEmpleado, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 140, 360, -1));

        sexoEmpleado.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        sexoEmpleado.setForeground(new java.awt.Color(255, 255, 255));
        sexoEmpleado.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "MASCULINO", "FEMENINO" }));
        sexoEmpleado.setSelectedIndex(-1);
        jPanel2.add(sexoEmpleado, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 170, 125, 25));

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Documento de Identidad : ");
        jPanel2.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 60, -1, -1));

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Celular : ");
        jPanel2.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 290, -1, -1));

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(240, 240, 240));
        jLabel8.setText("Correo :");
        jPanel2.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 260, -1, -1));
        jPanel2.add(direccionEmpleado, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 220, 360, -1));
        jPanel2.add(correoEmpleado, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 260, 360, -1));

        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(240, 240, 240));
        jLabel9.setText("Direccion:");
        jPanel2.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 220, -1, -1));

        jLabel11.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("Tipo:");
        jPanel2.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 290, -1, -1));

        tipoEmpleado.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Personal de ventas", "Personal de almacén" }));
        tipoEmpleado.setSelectedIndex(-1);
        tipoEmpleado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tipoEmpleadoActionPerformed(evt);
            }
        });
        jPanel2.add(tipoEmpleado, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 290, 170, -1));

        jCheckBox1.setText("Acceso al sistema");
        jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox1ActionPerformed(evt);
            }
        });
        jPanel2.add(jCheckBox1, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 10, -1, -1));
        jPanel2.add(nacimientoEmpleado, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 170, 120, 30));

        jLabel10.setText("Fecha  Nacimiento");
        jPanel2.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 180, -1, -1));
        jPanel2.add(celularEmpleado, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 290, 130, -1));

        jLabel18.setText("Puesto del almacén");
        jPanel2.add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 320, -1, -1));
        jPanel2.add(jSpinner1, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 320, 50, -1));
        jPanel2.add(inicioLaboral, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 350, 127, 30));

        jLabel19.setText("Fecha de inicio laboral");
        jPanel2.add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 350, -1, 30));

        jCheckBox2.setText("Por especificar");
        jCheckBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox2ActionPerformed(evt);
            }
        });
        jPanel2.add(jCheckBox2, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 350, -1, 30));

        jButton1.setText("Buscar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 20, -1, -1));
        jPanel2.add(documentoEmpleado, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 60, 110, -1));

        jLabel20.setIcon(new javax.swing.ImageIcon("C:\\Users\\Mchael\\Documents\\NetBeansProjects\\Libreria_GyG\\src\\fondo\\VL.jpg")); // NOI18N
        jPanel2.add(jLabel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(4, 0, 510, 200));

        jLabel21.setIcon(new javax.swing.ImageIcon("C:\\Users\\Mchael\\Documents\\NetBeansProjects\\Libreria_GyG\\src\\fondo\\VL.jpg")); // NOI18N
        jPanel2.add(jLabel21, new org.netbeans.lib.awtextra.AbsoluteConstraints(4, 0, 510, 400));

        jTabbedPane1.addTab("Nuevo Empleado", jPanel2);

        jPanel4.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel13.setText("Código Usuario:");
        jPanel4.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(145, 110, -1, -1));

        jLabel14.setText("Usuario:");
        jPanel4.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(181, 149, -1, -1));

        jLabel15.setText("Contraseña:");
        jPanel4.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(161, 189, -1, -1));

        jLabel16.setText("Fecha de registro:");
        jPanel4.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(133, 230, -1, -1));

        jTextField1.setText("Autogenerado");
        jTextField1.setEnabled(false);
        jPanel4.add(jTextField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(231, 107, 98, -1));

        user.setEnabled(false);
        jPanel4.add(user, new org.netbeans.lib.awtextra.AbsoluteConstraints(231, 146, 98, -1));

        pass.setEnabled(false);
        jPanel4.add(pass, new org.netbeans.lib.awtextra.AbsoluteConstraints(231, 186, 98, -1));

        fechaRegistro.setEnabled(false);
        jPanel4.add(fechaRegistro, new org.netbeans.lib.awtextra.AbsoluteConstraints(231, 224, 151, -1));

        jLabel12.setText("El usuario deberá cambiar  su contraseña la próxima vez");
        jPanel4.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(133, 284, -1, -1));

        jLabel17.setText("que inicie sesión en el sistema");
        jPanel4.add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(191, 304, -1, -1));

        jCheckBox3.setText("Cambiar usuario");
        jCheckBox3.setEnabled(false);
        jCheckBox3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox3ActionPerformed(evt);
            }
        });
        jPanel4.add(jCheckBox3, new org.netbeans.lib.awtextra.AbsoluteConstraints(347, 145, -1, -1));

        jLabel23.setIcon(new javax.swing.ImageIcon("C:\\Users\\Mchael\\Documents\\NetBeansProjects\\Libreria_GyG\\src\\fondo\\VL.jpg")); // NOI18N
        jPanel4.add(jLabel23, new org.netbeans.lib.awtextra.AbsoluteConstraints(4, 0, 510, -1));

        jTabbedPane1.addTab("Datos de Acceso", jPanel4);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addGap(140, 140, 140)
                        .addComponent(jLabel7)))
                .addContainerGap(17, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 431, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(jLabel7)
                .addGap(18, 18, 18)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 421, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        this.dispose();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void JBT_LimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JBT_LimpiarActionPerformed
        limpiar();
    }//GEN-LAST:event_JBT_LimpiarActionPerformed

    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed
        if (modificarEmpleado.isSelected()) {
            if (jCheckBox1.isSelected()) {
                String finalizar="";

                cadena = getCadenaAlfanumAleatoria(8);
                jTabbedPane1.setEnabled(true);
                user.setText(cadena);
                pass.setText(cadena);

                do {
                    try{
                        con = conexion.conectar();
                        Statement st5 = con.createStatement();
                        ResultSet rs5 = st5.executeQuery("Select * from usuarios where usuario = '"+cadena+"'");
                        rs5.last();
                        int encontrado = rs5.getRow();

                        if (encontrado == 1) {
                            cadena = getCadenaAlfanumAleatoria(8);
                            jTabbedPane1.setEnabled(true);
                            user.setText(cadena);
                            pass.setText(cadena);
                            finalizar = "existe";
                            JOptionPane.showMessageDialog(null,"existe");
                        }else{
                            Calendar c2 = new GregorianCalendar();
                            fechaRegistro.setCalendar(c2);
                            finalizar = "no existe";
                        }

                        st5.close();
                        rs5.close();
                    } catch (SQLException ex) {
                        JOptionPane.showMessageDialog(null,ex);
                    }
                } while (finalizar.equals("existe"));

            } else {
                jTabbedPane1.setEnabled(false);
            }
        }       
        
    }//GEN-LAST:event_jCheckBox1ActionPerformed

    private void tipoEmpleadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tipoEmpleadoActionPerformed
        if (tipoEmpleado.getSelectedIndex()==0) {
            jLabel18.setVisible(true);
            jSpinner1.setVisible(true);
        }
        
        if(tipoEmpleado.getSelectedIndex()==1){
            jLabel18.setVisible(false);
            jSpinner1.setVisible(false);
            jSpinner1.setValue(0);
        }
    }//GEN-LAST:event_tipoEmpleadoActionPerformed

    private void jCheckBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox2ActionPerformed
        if(jCheckBox2.isSelected()){
            inicioLaboral.setEnabled(false);
            inicioLaboral.setCalendar(null);
        }else{
            inicioLaboral.setEnabled(true);
        }
    }//GEN-LAST:event_jCheckBox2ActionPerformed

    private void jCheckBox3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox3ActionPerformed
        
        if (jCheckBox3.isSelected()) {
            user.setEnabled(true);
        } else {
            user.setEnabled(false);
            user.setText(keepUser);
        }
    }//GEN-LAST:event_jCheckBox3ActionPerformed

    private void jTabbedPane1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTabbedPane1MouseClicked
        con = conexion.conectar();
        
        if (modificarEmpleado.isSelected() && jCheckBox3.isSelected()) {
            if (jCheckBox1.isSelected()) {
                if (jTabbedPane1.getSelectedIndex()==0) {
                    try {
                        con = conexion.conectar();
                        Statement st = con.createStatement();
                        ResultSet rs = st.executeQuery("Select * from usuarios where usuario = '"+user.getText()+"'");
                        rs.last();

                        int found = rs.getRow();

                        if (found == 1){
                            JOptionPane.showMessageDialog(null,"El nombre de usuario ya existe");
                            jTabbedPane1.setSelectedIndex(1);
                            user.selectAll();
                            user.requestFocus(); 
                        } 

                    } catch (SQLException e) {
                        JOptionPane.showMessageDialog(null,e);
                    }
                }
            }
        }

    }//GEN-LAST:event_jTabbedPane1MouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        con = conexion.conectar();
        Date fechaNac, fechaIn;
        
        try {
            CallableStatement cst = con.prepareCall("Call buscar_empleado(?,?,?,?,?,?,?,?,?,?,?,?,?)");

            cst.setString(1,codigoEmpleado.getText());
            cst.registerOutParameter(2, java.sql.Types.VARCHAR);
            cst.registerOutParameter(3, java.sql.Types.VARCHAR);
            cst.registerOutParameter(4, java.sql.Types.VARCHAR);
            cst.registerOutParameter(5, java.sql.Types.INTEGER);
            cst.registerOutParameter(6, java.sql.Types.VARCHAR);
            cst.registerOutParameter(7, java.sql.Types.DATE);
            cst.registerOutParameter(8, java.sql.Types.VARCHAR);
            cst.registerOutParameter(9, java.sql.Types.INTEGER);
            cst.registerOutParameter(10, java.sql.Types.VARCHAR);
            cst.registerOutParameter(11, java.sql.Types.INTEGER);
            cst.registerOutParameter(12, java.sql.Types.VARCHAR);
            cst.registerOutParameter(13, java.sql.Types.DATE);
            cst.execute();
            
            codPersona = cst.getString(2);
            nomEmpleado = cst.getString(3);
            apeEmpleado = cst.getString(4);
            docEmpleado = cst.getInt(5);
            sexEmpleado = cst.getString(6);
            fechaNac = cst.getDate(7);
            dirEmpleado= cst.getString(8);
            celEmpleado = cst.getInt(9);
            corEmpleado = cst.getString(10);
            accSistema = cst.getInt(11);
            codEmpleado = cst.getString(12);
            fechaIn = cst.getDate(13);

            if (codEmpleado == null) {
                JOptionPane.showMessageDialog(null,"El código ingresado no existe");
            } else {
                nombreEmpleado.setText(nomEmpleado);
                apellidoEmpleado.setText(apeEmpleado);
                documentoEmpleado.setText(Integer.toString(docEmpleado));

                if (sexEmpleado.equals("M")) {
                    sexoEmpleado.setSelectedIndex(0);
                }

                if (sexEmpleado.equals("F")) {
                    sexoEmpleado.setSelectedIndex(1);
                }

                nacimientoEmpleado.setDate(fechaNac);
                direccionEmpleado.setText(dirEmpleado);
                celularEmpleado.setText(Integer.toString(celEmpleado));
                correoEmpleado.setText(corEmpleado);
                
                Statement st = con.createStatement();
                if (accSistema == 1) {
                    jCheckBox1.setSelected(true);
                    jTabbedPane1.setEnabled(true);
                    
                    try {
                        try (ResultSet rs3 = st.executeQuery("SELECT * FROM usuarios WHERE codPersona = '"+codPersona+"'")) {
                            rs3.last();
                            keepUser = rs3.getString("usuario");
                            
                            user.setText(keepUser);
                            pass.setText(rs3.getString("contrasena"));
                            fechaRegistro.setDate(rs3.getDate("fechaRegistro"));
                        }
                        
                    } catch (SQLException e) {
                        JOptionPane.showMessageDialog(null,"error encontrando en la tabla usuarios" +e);
                    }

                } else {
                    jCheckBox1.setSelected(false);
                }
                
                if (fechaIn == null) {
                    jCheckBox2.setSelected(true);
                }else{
                    inicioLaboral.setDate(fechaIn);
                    jCheckBox2.setSelected(false);
                }
                
                try {
                    ResultSet rs = st.executeQuery("SELECT * FROM personal_almacen WHERE codEmpleado = '"+codEmpleado+"'");
                    rs.last();
                    
                    int palmacenEncontrado = rs.getRow();
                    
                    if (palmacenEncontrado == 1) {
                        tipoEmpleado.setSelectedIndex(1);
                        rs.close();
                    } else {
                        try {
//                            Statement st2 = con.createStatement();
                            ResultSet rs2 = st.executeQuery("SELECT * FROM personal_ventas WHERE codEmpleado = '"+codEmpleado+"'");
                            rs2.next();
                            int pventaEncontrado = rs2.getRow();
                            
                            if (pventaEncontrado == 1) {
                                tipoEmpleado.setSelectedIndex(0);
                                jLabel18.setVisible(true);
                                jSpinner1.setVisible(true);
                                int numerAlmacen;
                                numerAlmacen = rs2.getInt("numeroPuesto");
                                
                                jSpinner1.setValue(numerAlmacen);
                            } else {
                                JOptionPane.showMessageDialog(null,"pventa inexistente \n o no existe en ninguna de las dos tablas :LOL:");
                            }
                        } catch (SQLException e) {
                            JOptionPane.showMessageDialog(null,"Error encontrando en la tabla personal_ventas "+e);
                        }
                    }
                } catch (SQLException e) {
                    JOptionPane.showMessageDialog(null,"Error encontrando en la tabla personal_almacen" + e);
                }
                
            }
            cst.close();
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null,"Problema con la búsqueda en la tabla empleados "+ e);
        }
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void modificarEmpleadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modificarEmpleadoActionPerformed
        if (modificarEmpleado.isSelected()) {
            documentoEmpleado.setEditable(true);
            nombreEmpleado.setEditable(true);
            apellidoEmpleado.setEditable(true);
            sexoEmpleado.setEnabled(true);
            nacimientoEmpleado.setEnabled(true);
            direccionEmpleado.setEditable(true);
            correoEmpleado.setEditable(true);
            celularEmpleado.setEditable(true);
            tipoEmpleado.setEnabled(true);
            jSpinner1.setEnabled(true);
            inicioLaboral.setEnabled(true);
            jCheckBox1.setEnabled(true);
            jCheckBox2.setEnabled(true);
            user.setEditable(true);
            pass.setEditable(true);
            jCheckBox3.setEnabled(true);
        } else {
            documentoEmpleado.setEditable(false);
            nombreEmpleado.setEditable(false);
            apellidoEmpleado.setEditable(false);
            sexoEmpleado.setEnabled(false);
            nacimientoEmpleado.setEnabled(false);
            direccionEmpleado.setEditable(false);
            correoEmpleado.setEditable(false);
            celularEmpleado.setEditable(false);
            tipoEmpleado.setEnabled(false);
            jSpinner1.setEnabled(false);
            inicioLaboral.setEnabled(false);
            jCheckBox1.setEnabled(false);
            jCheckBox2.setEnabled(false);
            user.setEditable(false);
            pass.setEditable(false);
            jCheckBox3.setEnabled(false);
        }
    }//GEN-LAST:event_modificarEmpleadoActionPerformed

    private void btnGuardadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardadActionPerformed
        con = conexion.conectar();
        
        if (modificarEmpleado.isSelected()) {
            try {
                Statement st = con.createStatement();
                CallableStatement actEmp = con.prepareCall("Call actualizar_personas(?,?,?,?,?,?,?,?,?,?)");
                actEmp.setString(1,codPersona);
                actEmp.setString(2,nombreEmpleado.getText());
                actEmp.setString(3,apellidoEmpleado.getText());
                actEmp.setInt(4,Integer.parseInt(documentoEmpleado.getText()));
                
                if (sexoEmpleado.getSelectedIndex() == 0) {
                    sexEmpleado = "M";
                } else {
                    sexEmpleado = "F";
                }
                              
                actEmp.setString(5,sexEmpleado);
                
                int dia, mes, año;
                String fechaNac, fechaInicio, fechaReg;
                dia = nacimientoEmpleado.getCalendar().get(Calendar.DAY_OF_MONTH);
                mes = nacimientoEmpleado.getCalendar().get(Calendar.MONTH);
                año = nacimientoEmpleado.getCalendar().get(Calendar.YEAR);
                fechaNac = año + "-" + mes + "-" + dia;
                
                actEmp.setString(6,fechaNac);
                actEmp.setString(7,direccionEmpleado.getText());
                actEmp.setInt(8,Integer.parseInt(celularEmpleado.getText()));
                actEmp.setString(9,correoEmpleado.getText());
                
                if (jCheckBox1.isSelected()) {
                    accSistema = 1;
                } else {
                    accSistema = 0;
                }
                actEmp.setInt(10,accSistema);
                actEmp.execute();
                
                //Actualizar la tabla Empleado
                try {
                    
                    if (jCheckBox2.isSelected()) {
                        fechaInicio = null;
                    } else {
                        dia = inicioLaboral.getCalendar().get(Calendar.DAY_OF_MONTH);
                        mes = inicioLaboral.getCalendar().get(Calendar.MONTH);
                        año = inicioLaboral.getCalendar().get(Calendar.YEAR);
                        fechaInicio = año + "-" + mes + "-" + dia;
                    }
                    
                    CallableStatement actEmpleado = con.prepareCall("Call actualizar_empleado(?,?,?,?)");
                    actEmpleado.setString(1,codEmpleado);
                    actEmpleado.setString(2,codPersona);
                    actEmpleado.setString(3,"Sin correo de empresa");                    
                    actEmpleado.setString(4,fechaInicio);
                    actEmpleado.execute();
                } catch (SQLException e) {
                    JOptionPane.showMessageDialog(null,"Error actualizando la tabla empleado" +e);
                }

                
                //Actualizar tablas personal_ventas y personal_almacen
                try {
                    //Realizar búsquedas en ambas tablas
                    ResultSet rs = st.executeQuery("SELECT * FROM personal_ventas WHERE codEmpleado = '"+codEmpleado+"'");
                    rs.last();
                    int pventasEncontrado = rs.getRow();

                    ResultSet rs2 = st.executeQuery("SELECT * FROM personal_almacen WHERE codEmpleado = '"+codEmpleado+"'");
                    rs2.last();
                    int palmacenEncontrado = rs2.getRow();


                    //Actualizar la tabla de personal de ventas si el tipo es personal de ventas
                    if (tipoEmpleado.getSelectedIndex() == 0) {                    
                        if (pventasEncontrado == 1) { //Encontrado = actualizarlo
                            CallableStatement actPventas = con.prepareCall("Call actualizar_pventas(?,?)");
                            actPventas.setString(1,codEmpleado);
                            actPventas.setInt(2,(Integer)jSpinner1.getValue());
                            actPventas.execute();
                        } else { //No encontrado = insertarlo
                            CallableStatement inPventas = con.prepareCall("Call insertar_pventas(?,?)");
                            inPventas.setString(1,codEmpleado);
                            inPventas.setInt(2,(Integer)jSpinner1.getValue());
                            inPventas.execute();
                        }

                        //Eliminar de la tabla personal_almacen si existe                    
                        if (palmacenEncontrado == 1) {
                            CallableStatement elpalmacen = con.prepareCall("Call borrar_palmacen(?)");
                            elpalmacen.setString(1,codEmpleado);
                            elpalmacen.execute();
                        }
                    }

                    //Actualizar la tabla de personal de almacen si el tipo es personal de almacen
                    if (tipoEmpleado.getSelectedIndex() == 1) {
                        if (palmacenEncontrado == 0) { //Si no existe en la tabla, hay que insertarlo
                            CallableStatement inPalmacen = con.prepareCall("Call insertar_palmacen(?)");
                            inPalmacen.setString(1,codEmpleado);
                            inPalmacen.execute();
                        }

                        //Borrar de la tabla personal_ventas si existe
                        if (pventasEncontrado == 1) {
                            CallableStatement elventas = con.prepareCall("Call borrar_pventas(?)");
                            elventas.setString(1,codEmpleado);
                            elventas.execute();
                        }
                    }
                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(null,"Error actualizando las tablas ventas y almacen " + ex);
                }
                
                //Actualizar la tabla usuarios si posee los permisos
                try {
                    //Búsqueda para encontrar si existe el usuario
                    ResultSet rs4 = st.executeQuery("SELECT * FROM usuarios WHERE codPersona = '"+codPersona+"'");
                    rs4.last();
                    int userEncontrado = rs4.getRow();
                    
                    if (jCheckBox1.isSelected()) {
                        //Si existe en la base, hay que actualizarlo
                        if (userEncontrado == 1) {
                            String codUsuario = rs4.getString("codUsuario") ;
                            CallableStatement aucUser = con.prepareCall("Call actualizar_usuarios(?,?,?,?,?)");
                            aucUser.setString(1,codUsuario);
                            aucUser.setString(2,codPersona);
                            aucUser.setString(3,user.getText());
                            aucUser.setString(4,pass.getText());
                            aucUser.setString(5,tipoEmpleado.getSelectedItem().toString());
                            aucUser.execute();
                        } else {//Si no existe, se inserta un nuevo usuario

                            dia = nacimientoEmpleado.getCalendar().get(Calendar.DAY_OF_MONTH);
                            mes = nacimientoEmpleado.getCalendar().get(Calendar.MONTH);
                            año = nacimientoEmpleado.getCalendar().get(Calendar.YEAR);
                            fechaReg = año + "-" + mes + "-" + dia;
                            
                            CallableStatement insUser = con.prepareCall("Call insertar_usuarios(?,?,?,?,?)");
                            insUser.setString(1,codPersona);
                            insUser.setString(2,user.getText());
                            insUser.setString(3,pass.getText());
                            insUser.setString(4,tipoEmpleado.getSelectedItem().toString());
                            insUser.setString(5,fechaReg);
                            insUser.execute();
                        }
                    
                    } else {
                        if (userEncontrado == 1) {
                            CallableStatement elUser = con.prepareCall("Call borrar_usuarios(?)");
                            elUser.setString(1, codPersona);
                            elUser.execute();
                        }
                    }
                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(null,"Error actualizando la tabla usuarios "+ex);
                }

            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null,"Error actualizando la tabla personas" +ex);
            }
        }
        
    }//GEN-LAST:event_btnGuardadActionPerformed
public void ocultarBarraTitulo()
{ 
Barra = ((javax.swing.plaf.basic.BasicInternalFrameUI) getUI()).getNorthPane(); 
dimBarra = Barra.getPreferredSize(); 
Barra.setSize(0,0); 
Barra.setPreferredSize(new Dimension(0,0)); 
repaint(); 
}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton JBT_Limpiar;
    private javax.swing.JTextField apellidoEmpleado;
    private javax.swing.JButton btnGuardad;
    private javax.swing.JTextField celularEmpleado;
    private javax.swing.JTextField codigoEmpleado;
    private javax.swing.JTextField correoEmpleado;
    private javax.swing.JTextField direccionEmpleado;
    private javax.swing.JTextField documentoEmpleado;
    private com.toedter.calendar.JDateChooser fechaRegistro;
    private com.toedter.calendar.JDateChooser inicioLaboral;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton3;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JCheckBox jCheckBox3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JSpinner jSpinner1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JCheckBox modificarEmpleado;
    private com.toedter.calendar.JDateChooser nacimientoEmpleado;
    private javax.swing.JTextField nombreEmpleado;
    private javax.swing.JTextField pass;
    private javax.swing.JComboBox sexoEmpleado;
    private javax.swing.JComboBox tipoEmpleado;
    private javax.swing.JTextField user;
    // End of variables declaration//GEN-END:variables
}
